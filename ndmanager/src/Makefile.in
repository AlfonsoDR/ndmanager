# Makefile.in generated by automake 1.8.5 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 286743 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



SOURCES = $(ndmanager_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = ndmanager$(EXEEXT)
subdir = src
DIST_COMMON = README $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kdelnkdir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(tmpldir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_ndmanager_OBJECTS = acquisitionsystempage.$(OBJEXT) \
	anatomypage.$(OBJEXT) channelcolors.$(OBJEXT) \
	channelcolorspage.$(OBJEXT) channeloffsetspage.$(OBJEXT) \
	clusterspage.$(OBJEXT) configuration.$(OBJEXT) \
	descriptionwriter.$(OBJEXT) editormanager.$(OBJEXT) \
	fileinformation.$(OBJEXT) filepage.$(OBJEXT) \
	filespage.$(OBJEXT) generalinfopage.$(OBJEXT) \
	generalinformation.$(OBJEXT) helper.$(OBJEXT) \
	launcherpage.$(OBJEXT) lfppage.$(OBJEXT) main.$(OBJEXT) \
	managerview.$(OBJEXT) miscellaneouspage.$(OBJEXT) \
	ndkonsole.$(OBJEXT) ndmanager.$(OBJEXT) ndmanagerdoc.$(OBJEXT) \
	neuroscopevideoinfo.$(OBJEXT) neuroscopevideopage.$(OBJEXT) \
	parameterpage.$(OBJEXT) parameterview.$(OBJEXT) pref.$(OBJEXT) \
	programinformation.$(OBJEXT) programpage.$(OBJEXT) \
	programspage.$(OBJEXT) queryinputdialog.$(OBJEXT) \
	queryoutputdialog.$(OBJEXT) spikepage.$(OBJEXT) tags.$(OBJEXT) \
	unitlistlayout.$(OBJEXT) unitlistpage.$(OBJEXT) \
	unittable.$(OBJEXT) unittableitem.$(OBJEXT) \
	videopage.$(OBJEXT) xmlreader.$(OBJEXT) xmlwriter.$(OBJEXT)
#>- ndmanager_OBJECTS = $(am_ndmanager_OBJECTS)
#>+ 23
ndmanager_final_OBJECTS = ndmanager.all_cpp.o 
ndmanager_nofinal_OBJECTS = acquisitionsystempage.$(OBJEXT) \
	anatomypage.$(OBJEXT) channelcolors.$(OBJEXT) \
	channelcolorspage.$(OBJEXT) channeloffsetspage.$(OBJEXT) \
	clusterspage.$(OBJEXT) configuration.$(OBJEXT) \
	descriptionwriter.$(OBJEXT) editormanager.$(OBJEXT) \
	fileinformation.$(OBJEXT) filepage.$(OBJEXT) \
	filespage.$(OBJEXT) generalinfopage.$(OBJEXT) \
	generalinformation.$(OBJEXT) helper.$(OBJEXT) \
	launcherpage.$(OBJEXT) lfppage.$(OBJEXT) main.$(OBJEXT) \
	managerview.$(OBJEXT) miscellaneouspage.$(OBJEXT) \
	ndkonsole.$(OBJEXT) ndmanager.$(OBJEXT) ndmanagerdoc.$(OBJEXT) \
	neuroscopevideoinfo.$(OBJEXT) neuroscopevideopage.$(OBJEXT) \
	parameterpage.$(OBJEXT) parameterview.$(OBJEXT) pref.$(OBJEXT) \
	programinformation.$(OBJEXT) programpage.$(OBJEXT) \
	programspage.$(OBJEXT) queryinputdialog.$(OBJEXT) \
	queryoutputdialog.$(OBJEXT) spikepage.$(OBJEXT) tags.$(OBJEXT) \
	unitlistlayout.$(OBJEXT) unitlistpage.$(OBJEXT) \
	unittable.$(OBJEXT) unittableitem.$(OBJEXT) \
	videopage.$(OBJEXT) xmlreader.$(OBJEXT) xmlwriter.$(OBJEXT) acquisitionsystemlayout.$(OBJEXT) anatomylayout.$(OBJEXT) channelcolorslayout.$(OBJEXT) channeloffsetslayout.$(OBJEXT) clusterslayout.$(OBJEXT) filelayout.$(OBJEXT) generalinfolayout.$(OBJEXT) launcherlayout.$(OBJEXT) lfplayout.$(OBJEXT) neuroscopemisclayout.$(OBJEXT) neuroscopevideolayout.$(OBJEXT) parameterlayout.$(OBJEXT) spikelayout.$(OBJEXT) videolayout.$(OBJEXT)\
queryoutputdialog.moc.o editormanager.moc.o queryinputdialog.moc.o 
@KDE_USE_FINAL_FALSE@ndmanager_OBJECTS = $(ndmanager_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@ndmanager_OBJECTS = $(ndmanager_final_OBJECTS)
am__DEPENDENCIES_1 =
ndmanager_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/acquisitionsystempage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/anatomypage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/channelcolors.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/channelcolorspage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/channeloffsetspage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/clusterspage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/descriptionwriter.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/editormanager.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/fileinformation.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/filepage.Po ./$(DEPDIR)/filespage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/generalinfopage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/generalinformation.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/helper.Po ./$(DEPDIR)/launcherpage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/lfppage.Po ./$(DEPDIR)/main.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/managerview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/miscellaneouspage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/ndkonsole.Po ./$(DEPDIR)/ndmanager.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/ndmanagerdoc.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/neuroscopevideoinfo.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/neuroscopevideopage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/parameterpage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/parameterview.Po ./$(DEPDIR)/pref.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/programinformation.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/programpage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/programspage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/queryinputdialog.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/queryoutputdialog.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/spikepage.Po ./$(DEPDIR)/tags.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/unitlistlayout.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/unitlistpage.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/unittable.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/unittableitem.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/videopage.Po ./$(DEPDIR)/xmlreader.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/xmlwriter.Po
#>+ 70
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/acquisitionsystemlayout.P $(DEPDIR)/anatomylayout.P $(DEPDIR)/channelcolorslayout.P $(DEPDIR)/channeloffsetslayout.P $(DEPDIR)/clusterslayout.P $(DEPDIR)/filelayout.P $(DEPDIR)/generalinfolayout.P $(DEPDIR)/launcherlayout.P $(DEPDIR)/lfplayout.P $(DEPDIR)/neuroscopemisclayout.P $(DEPDIR)/neuroscopevideolayout.P $(DEPDIR)/parameterlayout.P $(DEPDIR)/spikelayout.P $(DEPDIR)/queryoutputdialog.moc.P $(DEPDIR)/editormanager.moc.P $(DEPDIR)/queryinputdialog.moc.P  $(DEPDIR)/ndmanager.all_cpp.P ./$(DEPDIR)/acquisitionsystempage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/anatomypage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/channelcolors.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/channelcolorspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/channeloffsetspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/clusterspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/descriptionwriter.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/editormanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/fileinformation.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/filepage.Po ./$(DEPDIR)/filespage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/generalinfopage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/generalinformation.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/helper.Po ./$(DEPDIR)/launcherpage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/lfppage.Po ./$(DEPDIR)/main.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/managerview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/miscellaneouspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/ndkonsole.Po ./$(DEPDIR)/ndmanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/ndmanagerdoc.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopevideoinfo.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopevideopage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/parameterpage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/parameterview.Po ./$(DEPDIR)/pref.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/programinformation.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/programpage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/programspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/queryinputdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/queryoutputdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/spikepage.Po ./$(DEPDIR)/tags.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/unitlistlayout.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/unitlistpage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/unittable.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/unittableitem.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/videopage.Po ./$(DEPDIR)/xmlreader.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/xmlwriter.Po
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/acquisitionsystemlayout.P $(DEPDIR)/anatomylayout.P $(DEPDIR)/channelcolorslayout.P $(DEPDIR)/channeloffsetslayout.P $(DEPDIR)/clusterslayout.P $(DEPDIR)/filelayout.P $(DEPDIR)/generalinfolayout.P $(DEPDIR)/launcherlayout.P $(DEPDIR)/lfplayout.P $(DEPDIR)/neuroscopemisclayout.P $(DEPDIR)/neuroscopevideolayout.P $(DEPDIR)/parameterlayout.P $(DEPDIR)/spikelayout.P $(DEPDIR)/queryoutputdialog.moc.P $(DEPDIR)/editormanager.moc.P $(DEPDIR)/queryinputdialog.moc.P ./$(DEPDIR)/acquisitionsystempage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/anatomypage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/channelcolors.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/channelcolorspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/channeloffsetspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/clusterspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/configuration.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/descriptionwriter.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/editormanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/fileinformation.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/filepage.Po ./$(DEPDIR)/filespage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/generalinfopage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/generalinformation.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/helper.Po ./$(DEPDIR)/launcherpage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/lfppage.Po ./$(DEPDIR)/main.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/managerview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/miscellaneouspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/ndkonsole.Po ./$(DEPDIR)/ndmanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/ndmanagerdoc.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopevideoinfo.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/neuroscopevideopage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/parameterpage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/parameterview.Po ./$(DEPDIR)/pref.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/programinformation.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/programpage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/programspage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/queryinputdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/queryoutputdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/spikepage.Po ./$(DEPDIR)/tags.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/unitlistlayout.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/unitlistpage.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/unittable.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/unittableitem.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/videopage.Po ./$(DEPDIR)/xmlreader.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/xmlwriter.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(ndmanager_SOURCES)
DIST_SOURCES = $(ndmanager_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-exec-recursive install-info-recursive \
#>- 	install-recursive installcheck-recursive installdirs-recursive \
#>- 	pdf-recursive ps-recursive uninstall-info-recursive \
#>- 	uninstall-recursive
#>+ 6
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive nmcheck-recursive bcheck-recursive
kdelnkDATA_INSTALL = $(INSTALL_DATA)
rcDATA_INSTALL = $(INSTALL_DATA)
tmplDATA_INSTALL = $(INSTALL_DATA)
DATA = $(kdelnk_DATA) $(rc_DATA) $(tmpl_DATA)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBXML_CFLAGS = @LIBXML_CFLAGS@
LIBXML_LIBS = @LIBXML_LIBS@
LIBZ = @LIBZ@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMKMF = @XMKMF@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@

# set the include path for X, qt and KDE
INCLUDES = -I$(top_srcdir)/src/icons $(LIBXML_CFLAGS) $(all_includes)

# the library search path.
ndmanager_LDFLAGS = $(KDE_RPATH) $(all_libraries) $(LIBXML_LIBS)

# the libraries to link against.
ndmanager_LDADD = -lkhtml -lktexteditor $(LIB_KFILE) $(LIB_KDEPRINT)

# which sources should be compiled for ndmanager

# these are the headers for your project

# client stuff

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO
KDE_ICON = AUTO

# this is where the kdelnk file will go
kdelnkdir = $(kde_appsdir)/Science

# this is where the XML-GUI resource file goes
rcdir = $(kde_datadir)/ndmanager

# this is where the template files go
tmpldir = /usr/share/ndmanager/templates
tmpl_DATA = Template-16-tetrodes-20000Hz.xml Template-16-tetrodes-32552Hz.xml Template-1-tetrode-20000Hz.xml Template-1-tetrode-32552Hz.xml Template-2-tetrodes-20000Hz.xml Template-2-tetrodes-32552Hz.xml Template-3-tetrodes-20000Hz.xml Template-3-tetrodes-32552Hz.xml Template-4-octrodes-20000Hz.xml Template-4-octrodes-32552Hz.xml Template-4-tetrodes-20000Hz.xml Template-4-tetrodes-32552Hz.xml Template-8-octrodes-20000Hz.xml Template-8-octrodes-32552Hz.xml Template-8-tetrodes-20000Hz.xml Template-8-tetrodes-32552Hz.xml
kdelnk_DATA = ndmanager.desktop
rc_DATA = ndManagerDefault.xml ndmanager_katepartui.rc ndmanagerui.rc \
	queryreport.html

noinst_HEADERS = acquisitionsystempage.h anatomypage.h channelcolors.h \
	channelcolors.h	channelcolorspage.h channelcolorspage.h channeloffsetspage.h clusterspage.h configuration.h \
	configuration.h	descriptionwriter.h descriptionwriter.h editormanager.h fileinformation.h filepage.h \
	filepage.h	filespage.h filespage.h generalinfopage.h generalinformation.h helper.h \
	launcherpage.h launcherpage.h	lfppage.h lfppage.h managerview.h miscellaneouspage.h \
	ndkonsole.h ndmanager.h ndmanagerdoc.h ndmanagerdoc.h	ndmanager.h \
	neuroscopevideoinfo.h neuroscopevideopage.h parameterpage.h parameterpage.h	parameterview.h \
	parameterview.h pref.h programinformation.h programpage.h programspage.h \
	programspage.h	spikepage.h queryinputdialog.h queryoutputdialog.h spikepage.h tags.h \
	unitlistpage.h unittable.h unittableitem.h videopage.h xmlreader.h xmlwriter.h

#>- ndmanager_SOURCES = acquisitionsystemlayout.ui acquisitionsystempage.cpp \
#>- 	anatomylayout.ui anatomypage.cpp channelcolors.cpp channelcolorslayout.ui \
#>- 	channelcolorspage.cpp channeloffsetslayout.ui channeloffsetspage.cpp clusterslayout.ui \
#>- 	clusterspage.cpp configuration.cpp descriptionwriter.cpp editormanager.cpp \
#>- 	fileinformation.cpp filelayout.ui filepage.cpp filespage.cpp generalinfolayout.ui \
#>- 	generalinfopage.cpp generalinformation.cpp helper.cpp launcherlayout.ui launcherpage.cpp \
#>- 	lfplayout.ui lfppage.cpp main.cpp managerview.cpp miscellaneouspage.cpp \
#>- 	ndkonsole.cpp ndmanager.cpp ndmanagerdoc.cpp neuroscopemisclayout.ui \
#>- 	neuroscopevideoinfo.cpp neuroscopevideolayout.ui neuroscopevideopage.cpp parameterlayout.ui \
#>- 	parameterpage.cpp parameterview.cpp pref.cpp programinformation.cpp programpage.cpp \
#>- 	programspage.cpp queryinputdialog.cpp queryoutputdialog.cpp spikelayout.ui spikepage.cpp \
#>- 	tags.cpp unitlistlayout.cpp unitlistpage.cpp unittable.cpp unittableitem.cpp \
#>- 	videolayout.ui videopage.cpp xmlreader.cpp xmlwriter.cpp
#>+ 13
ndmanager_SOURCES= acquisitionsystempage.cpp \
	 anatomypage.cpp channelcolors.cpp  \
	channelcolorspage.cpp  channeloffsetspage.cpp  \
	clusterspage.cpp configuration.cpp descriptionwriter.cpp editormanager.cpp \
	fileinformation.cpp  filepage.cpp filespage.cpp  \
	generalinfopage.cpp generalinformation.cpp helper.cpp  launcherpage.cpp \
	 lfppage.cpp main.cpp managerview.cpp miscellaneouspage.cpp \
	ndkonsole.cpp ndmanager.cpp ndmanagerdoc.cpp  \
	neuroscopevideoinfo.cpp  neuroscopevideopage.cpp  \
	parameterpage.cpp parameterview.cpp pref.cpp programinformation.cpp programpage.cpp \
	programspage.cpp queryinputdialog.cpp queryoutputdialog.cpp  spikepage.cpp \
	tags.cpp unitlistlayout.cpp unitlistpage.cpp unittable.cpp unittableitem.cpp \
	 videopage.cpp xmlreader.cpp xmlwriter.cpp acquisitionsystemlayout.cpp anatomylayout.cpp channelcolorslayout.cpp channeloffsetslayout.cpp clusterslayout.cpp filelayout.cpp generalinfolayout.cpp launcherlayout.cpp lfplayout.cpp neuroscopemisclayout.cpp neuroscopevideolayout.cpp parameterlayout.cpp spikelayout.cpp videolayout.cpp

AM_CXXFLAGS = -pedantic
SUBDIRS = icons
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
ndmanager$(EXEEXT): $(ndmanager_OBJECTS) $(ndmanager_DEPENDENCIES) 
	@rm -f ndmanager$(EXEEXT)
	$(CXXLINK) $(ndmanager_LDFLAGS) $(ndmanager_OBJECTS) $(ndmanager_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acquisitionsystempage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/anatomypage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channelcolors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channelcolorspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/channeloffsetspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clusterspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/descriptionwriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editormanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fileinformation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filepage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filespage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generalinfopage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generalinformation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/helper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/launcherpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lfppage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/managerview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/miscellaneouspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ndkonsole.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ndmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ndmanagerdoc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neuroscopevideoinfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neuroscopevideopage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parameterpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/parameterview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pref.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/programinformation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/programpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/programspage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queryinputdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queryoutputdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spikepage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tags.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unitlistlayout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unitlistpage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unittableitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/videopage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlreader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmlwriter.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-kdelnkDATA: $(kdelnk_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(kdelnkdir)" || $(mkdir_p) "$(DESTDIR)$(kdelnkdir)"
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(kdelnkDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(kdelnkdir)/$$f'"; \
	  $(kdelnkDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(kdelnkdir)/$$f"; \
	done

uninstall-kdelnkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(kdelnkdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(kdelnkdir)/$$f"; \
	done
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(rcdir)" || $(mkdir_p) "$(DESTDIR)$(rcdir)"
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(rcDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(rcdir)/$$f'"; \
	  $(rcDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(rcdir)/$$f"; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(rcdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(rcdir)/$$f"; \
	done
install-tmplDATA: $(tmpl_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tmpldir)" || $(mkdir_p) "$(DESTDIR)$(tmpldir)"
	@list='$(tmpl_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(tmplDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(tmpldir)/$$f'"; \
	  $(tmplDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(tmpldir)/$$f"; \
	done

uninstall-tmplDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tmpl_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(tmpldir)/$$f'"; \
	  rm -f "$(DESTDIR)$(tmpldir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || mkdir "$(distdir)/$$subdir" \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="../$(top_distdir)" \
	        distdir="../$(distdir)/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(kdelnkdir)" "$(DESTDIR)$(rcdir)" "$(DESTDIR)$(tmpldir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

#>- install-data-am: install-kdelnkDATA install-rcDATA install-tmplDATA
#>+ 1
install-data-am: install-kde-icons  install-kdelnkDATA install-rcDATA install-tmplDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
#>- 	uninstall-kdelnkDATA uninstall-rcDATA uninstall-tmplDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am \
	uninstall-kdelnkDATA uninstall-rcDATA uninstall-tmplDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-kdelnkDATA install-man \
	install-rcDATA install-strip install-tmplDATA installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am uninstall-kdelnkDATA \
	uninstall-rcDATA uninstall-tmplDATA


messages: rc.cpp
	$(EXTRACTRC) `find . -name \*.ui -o -name \*.rc` > rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/ndmanager.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
programspage.moc: $(srcdir)/programspage.h
	$(MOC) $(srcdir)/programspage.h -o programspage.moc

#>+ 2
mocs: programspage.moc

#>+ 3
clusterspage.moc: $(srcdir)/clusterspage.h
	$(MOC) $(srcdir)/clusterspage.h -o clusterspage.moc

#>+ 2
mocs: clusterspage.moc

#>+ 3
programpage.moc: $(srcdir)/programpage.h
	$(MOC) $(srcdir)/programpage.h -o programpage.moc

#>+ 2
mocs: programpage.moc

#>+ 3
filespage.moc: $(srcdir)/filespage.h
	$(MOC) $(srcdir)/filespage.h -o filespage.moc

#>+ 2
mocs: filespage.moc

#>+ 3
videopage.moc: $(srcdir)/videopage.h
	$(MOC) $(srcdir)/videopage.h -o videopage.moc

#>+ 2
mocs: videopage.moc

#>+ 3
channeloffsetspage.moc: $(srcdir)/channeloffsetspage.h
	$(MOC) $(srcdir)/channeloffsetspage.h -o channeloffsetspage.moc

#>+ 2
mocs: channeloffsetspage.moc

#>+ 3
ndmanager.moc: $(srcdir)/ndmanager.h
	$(MOC) $(srcdir)/ndmanager.h -o ndmanager.moc

#>+ 2
mocs: ndmanager.moc

#>+ 3
unitlistlayout.moc: $(srcdir)/unitlistlayout.h
	$(MOC) $(srcdir)/unitlistlayout.h -o unitlistlayout.moc

#>+ 2
mocs: unitlistlayout.moc

#>+ 3
filepage.moc: $(srcdir)/filepage.h
	$(MOC) $(srcdir)/filepage.h -o filepage.moc

#>+ 2
mocs: filepage.moc

#>+ 3
parameterview.moc: $(srcdir)/parameterview.h
	$(MOC) $(srcdir)/parameterview.h -o parameterview.moc

#>+ 2
mocs: parameterview.moc

#>+ 3
anatomypage.moc: $(srcdir)/anatomypage.h
	$(MOC) $(srcdir)/anatomypage.h -o anatomypage.moc

#>+ 2
mocs: anatomypage.moc

#>+ 3
acquisitionsystempage.moc: $(srcdir)/acquisitionsystempage.h
	$(MOC) $(srcdir)/acquisitionsystempage.h -o acquisitionsystempage.moc

#>+ 2
mocs: acquisitionsystempage.moc

#>+ 3
miscellaneouspage.moc: $(srcdir)/miscellaneouspage.h
	$(MOC) $(srcdir)/miscellaneouspage.h -o miscellaneouspage.moc

#>+ 2
mocs: miscellaneouspage.moc

#>+ 3
spikepage.moc: $(srcdir)/spikepage.h
	$(MOC) $(srcdir)/spikepage.h -o spikepage.moc

#>+ 2
mocs: spikepage.moc

#>+ 3
unitlistpage.moc: $(srcdir)/unitlistpage.h
	$(MOC) $(srcdir)/unitlistpage.h -o unitlistpage.moc

#>+ 2
mocs: unitlistpage.moc

#>+ 3
pref.moc: $(srcdir)/pref.h
	$(MOC) $(srcdir)/pref.h -o pref.moc

#>+ 2
mocs: pref.moc

#>+ 3
ndkonsole.moc: $(srcdir)/ndkonsole.h
	$(MOC) $(srcdir)/ndkonsole.h -o ndkonsole.moc

#>+ 2
mocs: ndkonsole.moc

#>+ 3
parameterpage.moc: $(srcdir)/parameterpage.h
	$(MOC) $(srcdir)/parameterpage.h -o parameterpage.moc

#>+ 2
mocs: parameterpage.moc

#>+ 3
generalinfopage.moc: $(srcdir)/generalinfopage.h
	$(MOC) $(srcdir)/generalinfopage.h -o generalinfopage.moc

#>+ 2
mocs: generalinfopage.moc

#>+ 3
queryoutputdialog.moc.cpp: $(srcdir)/queryoutputdialog.h
	$(MOC) $(srcdir)/queryoutputdialog.h -o queryoutputdialog.moc.cpp

#>+ 2
mocs: queryoutputdialog.moc.cpp

#>+ 3
launcherpage.moc: $(srcdir)/launcherpage.h
	$(MOC) $(srcdir)/launcherpage.h -o launcherpage.moc

#>+ 2
mocs: launcherpage.moc

#>+ 3
neuroscopevideopage.moc: $(srcdir)/neuroscopevideopage.h
	$(MOC) $(srcdir)/neuroscopevideopage.h -o neuroscopevideopage.moc

#>+ 2
mocs: neuroscopevideopage.moc

#>+ 3
editormanager.moc.cpp: $(srcdir)/editormanager.h
	$(MOC) $(srcdir)/editormanager.h -o editormanager.moc.cpp

#>+ 2
mocs: editormanager.moc.cpp

#>+ 3
managerview.moc: $(srcdir)/managerview.h
	$(MOC) $(srcdir)/managerview.h -o managerview.moc

#>+ 2
mocs: managerview.moc

#>+ 3
queryinputdialog.moc.cpp: $(srcdir)/queryinputdialog.h
	$(MOC) $(srcdir)/queryinputdialog.h -o queryinputdialog.moc.cpp

#>+ 2
mocs: queryinputdialog.moc.cpp

#>+ 3
lfppage.moc: $(srcdir)/lfppage.h
	$(MOC) $(srcdir)/lfppage.h -o lfppage.moc

#>+ 2
mocs: lfppage.moc

#>+ 3
channelcolorspage.moc: $(srcdir)/channelcolorspage.h
	$(MOC) $(srcdir)/channelcolorspage.h -o channelcolorspage.moc

#>+ 2
mocs: channelcolorspage.moc

#>+ 3
clean-metasources:
	-rm -f  programspage.moc clusterspage.moc programpage.moc filespage.moc videopage.moc channeloffsetspage.moc ndmanager.moc unitlistlayout.moc filepage.moc parameterview.moc anatomypage.moc acquisitionsystempage.moc miscellaneouspage.moc spikepage.moc unitlistpage.moc pref.moc ndkonsole.moc parameterpage.moc generalinfopage.moc queryoutputdialog.moc.cpp launcherpage.moc neuroscopevideopage.moc editormanager.moc.cpp managerview.moc queryinputdialog.moc.cpp lfppage.moc channelcolorspage.moc

#>+ 2
KDE_DIST=anatomylayout.ui description.xsd hi64-app-ndmanager.png generalinfolayout.ui hi16-app-ndmanager.png ndmanager.desktop Template-3-tetrodes-20000Hz.xml neuroscopemisclayout.ui videolayout.ui Template-4-octrodes-20000Hz.xml channelcolorslayout.ui ndManagerDefault.xml Makefile.in Template-8-octrodes-32552Hz.xml spikelayout.ui Template-2-tetrodes-20000Hz.xml lfplayout.ui Template-4-tetrodes-20000Hz.xml Template-1-tetrode-32552Hz.xml ndmanager_katepartui.rc launcherlayout.ui ndmanagerui.rc Template-2-tetrodes-32552Hz.xml hi48-app-ndmanager.png Template-16-tetrodes-32552Hz.xml Template-1-tetrode-20000Hz.xml ndmanager.lsm queryinputdialogbase.ui Template-3-tetrodes-32552Hz.xml channeloffsetslayout.ui Template-4-octrodes-32552Hz.xml acquisitionsystemlayout.ui hi32-app-ndmanager.png Template-8-tetrodes-32552Hz.xml filelayout.ui unittable.loT unitlistlayout.h Template-8-tetrodes-20000Hz.xml hi22-app-ndmanager.png Template-4-tetrodes-32552Hz.xml clusterslayout.ui Template-8-octrodes-20000Hz.xml neuroscopevideolayout.ui queryreport.html parameter.xsd parameterlayout.ui Makefile.am Template-16-tetrodes-20000Hz.xml 

#>+ 17
clean-ui:
	-rm -f \
	acquisitionsystemlayout.cpp acquisitionsystemlayout.h acquisitionsystemlayout.moc \
	anatomylayout.cpp anatomylayout.h anatomylayout.moc \
	channelcolorslayout.cpp channelcolorslayout.h channelcolorslayout.moc \
	channeloffsetslayout.cpp channeloffsetslayout.h channeloffsetslayout.moc \
	clusterslayout.cpp clusterslayout.h clusterslayout.moc \
	filelayout.cpp filelayout.h filelayout.moc \
	generalinfolayout.cpp generalinfolayout.h generalinfolayout.moc \
	launcherlayout.cpp launcherlayout.h launcherlayout.moc \
	lfplayout.cpp lfplayout.h lfplayout.moc \
	neuroscopemisclayout.cpp neuroscopemisclayout.h neuroscopemisclayout.moc \
	neuroscopevideolayout.cpp neuroscopevideolayout.h neuroscopevideolayout.moc \
	parameterlayout.cpp parameterlayout.h parameterlayout.moc \
	spikelayout.cpp spikelayout.h spikelayout.moc \
	videolayout.cpp videolayout.h videolayout.moc 

#>+ 2
docs-am:

#>+ 19
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-ndmanager.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/ndmanager.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-ndmanager.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/ndmanager.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-ndmanager.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/ndmanager.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-ndmanager.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/ndmanager.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-ndmanager.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/ndmanager.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/ndmanager.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/ndmanager.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/ndmanager.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/ndmanager.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/ndmanager.png

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
ndmanager.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/acquisitionsystempage.cpp $(srcdir)/anatomypage.cpp $(srcdir)/channelcolors.cpp $(srcdir)/channelcolorspage.cpp $(srcdir)/channeloffsetspage.cpp $(srcdir)/clusterspage.cpp $(srcdir)/configuration.cpp $(srcdir)/descriptionwriter.cpp $(srcdir)/editormanager.cpp $(srcdir)/fileinformation.cpp $(srcdir)/filepage.cpp $(srcdir)/filespage.cpp $(srcdir)/generalinfopage.cpp $(srcdir)/generalinformation.cpp $(srcdir)/helper.cpp $(srcdir)/launcherpage.cpp $(srcdir)/lfppage.cpp $(srcdir)/main.cpp $(srcdir)/managerview.cpp $(srcdir)/miscellaneouspage.cpp $(srcdir)/ndkonsole.cpp $(srcdir)/ndmanager.cpp $(srcdir)/ndmanagerdoc.cpp $(srcdir)/neuroscopevideoinfo.cpp $(srcdir)/neuroscopevideopage.cpp $(srcdir)/parameterpage.cpp $(srcdir)/parameterview.cpp $(srcdir)/pref.cpp $(srcdir)/programinformation.cpp $(srcdir)/programpage.cpp $(srcdir)/programspage.cpp $(srcdir)/queryinputdialog.cpp $(srcdir)/queryoutputdialog.cpp $(srcdir)/spikepage.cpp $(srcdir)/tags.cpp $(srcdir)/unitlistlayout.cpp $(srcdir)/unitlistpage.cpp $(srcdir)/unittable.cpp $(srcdir)/unittableitem.cpp $(srcdir)/videopage.cpp $(srcdir)/xmlreader.cpp $(srcdir)/xmlwriter.cpp acquisitionsystemlayout.cpp anatomylayout.cpp channelcolorslayout.cpp channeloffsetslayout.cpp clusterslayout.cpp filelayout.cpp generalinfolayout.cpp launcherlayout.cpp lfplayout.cpp neuroscopemisclayout.cpp neuroscopevideolayout.cpp parameterlayout.cpp spikelayout.cpp videolayout.cpp queryoutputdialog.moc.cpp editormanager.moc.cpp queryinputdialog.moc.cpp  programspage.moc programpage.moc filespage.moc lfplayout.moc channeloffsetspage.moc neuroscopemisclayout.moc ndmanager.moc unitlistlayout.moc filepage.moc parameterview.moc anatomypage.moc acquisitionsystemlayout.moc anatomylayout.moc spikepage.moc channelcolorslayout.moc parameterlayout.moc pref.moc generalinfolayout.moc parameterpage.moc videolayout.moc channelcolorspage.moc clusterspage.moc videopage.moc filelayout.moc neuroscopevideolayout.moc acquisitionsystempage.moc channeloffsetslayout.moc miscellaneouspage.moc unitlistpage.moc ndkonsole.moc generalinfopage.moc spikelayout.moc launcherlayout.moc launcherpage.moc managerview.moc neuroscopevideopage.moc lfppage.moc clusterslayout.moc
	@echo 'creating ndmanager.all_cpp.cpp ...'; \
	rm -f ndmanager.all_cpp.files ndmanager.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> ndmanager.all_cpp.final; \
	for file in acquisitionsystempage.cpp anatomypage.cpp channelcolors.cpp channelcolorspage.cpp channeloffsetspage.cpp clusterspage.cpp configuration.cpp descriptionwriter.cpp editormanager.cpp fileinformation.cpp filepage.cpp filespage.cpp generalinfopage.cpp generalinformation.cpp helper.cpp launcherpage.cpp lfppage.cpp main.cpp managerview.cpp miscellaneouspage.cpp ndkonsole.cpp ndmanager.cpp ndmanagerdoc.cpp neuroscopevideoinfo.cpp neuroscopevideopage.cpp parameterpage.cpp parameterview.cpp pref.cpp programinformation.cpp programpage.cpp programspage.cpp queryinputdialog.cpp queryoutputdialog.cpp spikepage.cpp tags.cpp unitlistlayout.cpp unitlistpage.cpp unittable.cpp unittableitem.cpp videopage.cpp xmlreader.cpp xmlwriter.cpp acquisitionsystemlayout.cpp anatomylayout.cpp channelcolorslayout.cpp channeloffsetslayout.cpp clusterslayout.cpp filelayout.cpp generalinfolayout.cpp launcherlayout.cpp lfplayout.cpp neuroscopemisclayout.cpp neuroscopevideolayout.cpp parameterlayout.cpp spikelayout.cpp videolayout.cpp queryoutputdialog.moc.cpp editormanager.moc.cpp queryinputdialog.moc.cpp ; do \
	  echo "#include \"$$file\"" >> ndmanager.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> ndmanager.all_cpp.final; \
	done; \
	cat ndmanager.all_cpp.final ndmanager.all_cpp.files > ndmanager.all_cpp.cpp; \
	rm -f ndmanager.all_cpp.final ndmanager.all_cpp.files

#>+ 3
clean-final:
	-rm -f ndmanager.all_cpp.cpp

#>+ 3
final:
	$(MAKE) ndmanager_OBJECTS="$(ndmanager_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) ndmanager_OBJECTS="$(ndmanager_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) ndmanager_OBJECTS="$(ndmanager_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) ndmanager_OBJECTS="$(ndmanager_nofinal_OBJECTS)" install-am

#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 93
$(srcdir)/ndkonsole.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
filepage.o: filepage.moc 
$(srcdir)/helper.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
unitlistlayout.o: unitlistlayout.moc 
$(srcdir)/main.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
acquisitionsystempage.lo: acquisitionsystempage.moc 
programpage.lo: programpage.moc 
$(srcdir)/fileinformation.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
filespage.o: filespage.moc 
$(srcdir)/generalinformation.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
neuroscopevideopage.o: neuroscopevideopage.moc 
$(srcdir)/unitlistpage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/descriptionwriter.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/xmlwriter.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/ndmanager.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
lfppage.o: lfppage.moc 
$(srcdir)/ndmanagerdoc.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
parameterpage.o: parameterpage.moc 
nmcheck-am: nmcheck
ndkonsole.o: ndkonsole.moc 
$(srcdir)/neuroscopevideoinfo.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/programpage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/managerview.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
generalinfopage.o: generalinfopage.moc 
miscellaneouspage.lo: miscellaneouspage.moc 
programspage.o: programspage.moc 
$(srcdir)/tags.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/generalinfopage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/filespage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/unittable.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
acquisitionsystempage.o: acquisitionsystempage.moc 
channeloffsetspage.lo: channeloffsetspage.moc 
$(srcdir)/unittableitem.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
ndmanager.o: ndmanager.moc 
programpage.o: programpage.moc 
filepage.lo: filepage.moc 
unitlistpage.o: unitlistpage.moc 
$(srcdir)/programinformation.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
lfppage.lo: lfppage.moc 
filespage.lo: filespage.moc 
spikepage.o: spikepage.moc 
$(srcdir)/neuroscopevideopage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
anatomypage.o: anatomypage.moc 
$(srcdir)/videopage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/acquisitionsystempage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/miscellaneouspage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
programspage.lo: programspage.moc 
anatomypage.lo: anatomypage.moc 
$(srcdir)/launcherpage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
channeloffsetspage.o: channeloffsetspage.moc 
managerview.o: managerview.moc 
$(srcdir)/anatomypage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/spikepage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
unitlistlayout.lo: unitlistlayout.moc 
unitlistpage.lo: unitlistpage.moc 
videopage.o: videopage.moc 
clusterspage.lo: clusterspage.moc 
videopage.lo: videopage.moc 
$(srcdir)/editormanager.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
managerview.lo: managerview.moc 
$(srcdir)/channeloffsetspage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/parameterview.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/xmlreader.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
channelcolorspage.lo: channelcolorspage.moc 
pref.lo: pref.moc 
$(srcdir)/clusterspage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/configuration.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/lfppage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/channelcolorspage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/filepage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/parameterpage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/channelcolors.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
$(srcdir)/programspage.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
launcherpage.o: launcherpage.moc 
$(srcdir)/queryoutputdialog.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
parameterview.lo: parameterview.moc 
parameterview.o: parameterview.moc 
ndkonsole.lo: ndkonsole.moc 
neuroscopevideopage.lo: neuroscopevideopage.moc 
spikepage.lo: spikepage.moc 
ndmanager.lo: ndmanager.moc 
nmcheck: 
generalinfopage.lo: generalinfopage.moc 
clusterspage.o: clusterspage.moc 
parameterpage.lo: parameterpage.moc 
$(srcdir)/pref.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
launcherpage.lo: launcherpage.moc 
$(srcdir)/queryinputdialog.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 
channelcolorspage.o: channelcolorspage.moc 
pref.o: pref.moc 
miscellaneouspage.o: miscellaneouspage.moc 
$(srcdir)/unitlistlayout.cpp: acquisitionsystemlayout.h anatomylayout.h channelcolorslayout.h channeloffsetslayout.h clusterslayout.h filelayout.h generalinfolayout.h launcherlayout.h lfplayout.h neuroscopemisclayout.h neuroscopevideolayout.h parameterlayout.h spikelayout.h videolayout.h 

#>+ 210
spikelayout.cpp: $(srcdir)/spikelayout.ui spikelayout.h spikelayout.moc
	rm -f spikelayout.cpp
	echo '#include <kdialog.h>' > spikelayout.cpp
	echo '#include <klocale.h>' >> spikelayout.cpp
	$(UIC) -tr ${UIC_TR} -i spikelayout.h $(srcdir)/spikelayout.ui > spikelayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" spikelayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_spikelayout,g" >> spikelayout.cpp ;\
	rm -f spikelayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "spikelayout.moc"' >> spikelayout.cpp; else rm -f spikelayout.cpp ; exit $$ret ; fi

spikelayout.h: $(srcdir)/spikelayout.ui
	$(UIC) -o spikelayout.h $(srcdir)/spikelayout.ui

spikelayout.moc: spikelayout.h
	$(MOC) spikelayout.h -o spikelayout.moc

channelcolorslayout.cpp: $(srcdir)/channelcolorslayout.ui channelcolorslayout.h channelcolorslayout.moc
	rm -f channelcolorslayout.cpp
	echo '#include <kdialog.h>' > channelcolorslayout.cpp
	echo '#include <klocale.h>' >> channelcolorslayout.cpp
	$(UIC) -tr ${UIC_TR} -i channelcolorslayout.h $(srcdir)/channelcolorslayout.ui > channelcolorslayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" channelcolorslayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_channelcolorslayout,g" >> channelcolorslayout.cpp ;\
	rm -f channelcolorslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "channelcolorslayout.moc"' >> channelcolorslayout.cpp; else rm -f channelcolorslayout.cpp ; exit $$ret ; fi

channelcolorslayout.h: $(srcdir)/channelcolorslayout.ui
	$(UIC) -o channelcolorslayout.h $(srcdir)/channelcolorslayout.ui

channelcolorslayout.moc: channelcolorslayout.h
	$(MOC) channelcolorslayout.h -o channelcolorslayout.moc

parameterlayout.cpp: $(srcdir)/parameterlayout.ui parameterlayout.h parameterlayout.moc
	rm -f parameterlayout.cpp
	echo '#include <kdialog.h>' > parameterlayout.cpp
	echo '#include <klocale.h>' >> parameterlayout.cpp
	$(UIC) -tr ${UIC_TR} -i parameterlayout.h $(srcdir)/parameterlayout.ui > parameterlayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" parameterlayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_parameterlayout,g" >> parameterlayout.cpp ;\
	rm -f parameterlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "parameterlayout.moc"' >> parameterlayout.cpp; else rm -f parameterlayout.cpp ; exit $$ret ; fi

parameterlayout.h: $(srcdir)/parameterlayout.ui
	$(UIC) -o parameterlayout.h $(srcdir)/parameterlayout.ui

parameterlayout.moc: parameterlayout.h
	$(MOC) parameterlayout.h -o parameterlayout.moc

lfplayout.cpp: $(srcdir)/lfplayout.ui lfplayout.h lfplayout.moc
	rm -f lfplayout.cpp
	echo '#include <kdialog.h>' > lfplayout.cpp
	echo '#include <klocale.h>' >> lfplayout.cpp
	$(UIC) -tr ${UIC_TR} -i lfplayout.h $(srcdir)/lfplayout.ui > lfplayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" lfplayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_lfplayout,g" >> lfplayout.cpp ;\
	rm -f lfplayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "lfplayout.moc"' >> lfplayout.cpp; else rm -f lfplayout.cpp ; exit $$ret ; fi

lfplayout.h: $(srcdir)/lfplayout.ui
	$(UIC) -o lfplayout.h $(srcdir)/lfplayout.ui

lfplayout.moc: lfplayout.h
	$(MOC) lfplayout.h -o lfplayout.moc

generalinfolayout.cpp: $(srcdir)/generalinfolayout.ui generalinfolayout.h generalinfolayout.moc
	rm -f generalinfolayout.cpp
	echo '#include <kdialog.h>' > generalinfolayout.cpp
	echo '#include <klocale.h>' >> generalinfolayout.cpp
	$(UIC) -tr ${UIC_TR} -i generalinfolayout.h $(srcdir)/generalinfolayout.ui > generalinfolayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" generalinfolayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_generalinfolayout,g" >> generalinfolayout.cpp ;\
	rm -f generalinfolayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "generalinfolayout.moc"' >> generalinfolayout.cpp; else rm -f generalinfolayout.cpp ; exit $$ret ; fi

generalinfolayout.h: $(srcdir)/generalinfolayout.ui
	$(UIC) -o generalinfolayout.h $(srcdir)/generalinfolayout.ui

generalinfolayout.moc: generalinfolayout.h
	$(MOC) generalinfolayout.h -o generalinfolayout.moc

channeloffsetslayout.cpp: $(srcdir)/channeloffsetslayout.ui channeloffsetslayout.h channeloffsetslayout.moc
	rm -f channeloffsetslayout.cpp
	echo '#include <kdialog.h>' > channeloffsetslayout.cpp
	echo '#include <klocale.h>' >> channeloffsetslayout.cpp
	$(UIC) -tr ${UIC_TR} -i channeloffsetslayout.h $(srcdir)/channeloffsetslayout.ui > channeloffsetslayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" channeloffsetslayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_channeloffsetslayout,g" >> channeloffsetslayout.cpp ;\
	rm -f channeloffsetslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "channeloffsetslayout.moc"' >> channeloffsetslayout.cpp; else rm -f channeloffsetslayout.cpp ; exit $$ret ; fi

channeloffsetslayout.h: $(srcdir)/channeloffsetslayout.ui
	$(UIC) -o channeloffsetslayout.h $(srcdir)/channeloffsetslayout.ui

channeloffsetslayout.moc: channeloffsetslayout.h
	$(MOC) channeloffsetslayout.h -o channeloffsetslayout.moc

neuroscopevideolayout.cpp: $(srcdir)/neuroscopevideolayout.ui neuroscopevideolayout.h neuroscopevideolayout.moc
	rm -f neuroscopevideolayout.cpp
	echo '#include <kdialog.h>' > neuroscopevideolayout.cpp
	echo '#include <klocale.h>' >> neuroscopevideolayout.cpp
	$(UIC) -tr ${UIC_TR} -i neuroscopevideolayout.h $(srcdir)/neuroscopevideolayout.ui > neuroscopevideolayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" neuroscopevideolayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_neuroscopevideolayout,g" >> neuroscopevideolayout.cpp ;\
	rm -f neuroscopevideolayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "neuroscopevideolayout.moc"' >> neuroscopevideolayout.cpp; else rm -f neuroscopevideolayout.cpp ; exit $$ret ; fi

neuroscopevideolayout.h: $(srcdir)/neuroscopevideolayout.ui
	$(UIC) -o neuroscopevideolayout.h $(srcdir)/neuroscopevideolayout.ui

neuroscopevideolayout.moc: neuroscopevideolayout.h
	$(MOC) neuroscopevideolayout.h -o neuroscopevideolayout.moc

filelayout.cpp: $(srcdir)/filelayout.ui filelayout.h filelayout.moc
	rm -f filelayout.cpp
	echo '#include <kdialog.h>' > filelayout.cpp
	echo '#include <klocale.h>' >> filelayout.cpp
	$(UIC) -tr ${UIC_TR} -i filelayout.h $(srcdir)/filelayout.ui > filelayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" filelayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_filelayout,g" >> filelayout.cpp ;\
	rm -f filelayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "filelayout.moc"' >> filelayout.cpp; else rm -f filelayout.cpp ; exit $$ret ; fi

filelayout.h: $(srcdir)/filelayout.ui
	$(UIC) -o filelayout.h $(srcdir)/filelayout.ui

filelayout.moc: filelayout.h
	$(MOC) filelayout.h -o filelayout.moc

acquisitionsystemlayout.cpp: $(srcdir)/acquisitionsystemlayout.ui acquisitionsystemlayout.h acquisitionsystemlayout.moc
	rm -f acquisitionsystemlayout.cpp
	echo '#include <kdialog.h>' > acquisitionsystemlayout.cpp
	echo '#include <klocale.h>' >> acquisitionsystemlayout.cpp
	$(UIC) -tr ${UIC_TR} -i acquisitionsystemlayout.h $(srcdir)/acquisitionsystemlayout.ui > acquisitionsystemlayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" acquisitionsystemlayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_acquisitionsystemlayout,g" >> acquisitionsystemlayout.cpp ;\
	rm -f acquisitionsystemlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "acquisitionsystemlayout.moc"' >> acquisitionsystemlayout.cpp; else rm -f acquisitionsystemlayout.cpp ; exit $$ret ; fi

acquisitionsystemlayout.h: $(srcdir)/acquisitionsystemlayout.ui
	$(UIC) -o acquisitionsystemlayout.h $(srcdir)/acquisitionsystemlayout.ui

acquisitionsystemlayout.moc: acquisitionsystemlayout.h
	$(MOC) acquisitionsystemlayout.h -o acquisitionsystemlayout.moc

launcherlayout.cpp: $(srcdir)/launcherlayout.ui launcherlayout.h launcherlayout.moc
	rm -f launcherlayout.cpp
	echo '#include <kdialog.h>' > launcherlayout.cpp
	echo '#include <klocale.h>' >> launcherlayout.cpp
	$(UIC) -tr ${UIC_TR} -i launcherlayout.h $(srcdir)/launcherlayout.ui > launcherlayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" launcherlayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_launcherlayout,g" >> launcherlayout.cpp ;\
	rm -f launcherlayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "launcherlayout.moc"' >> launcherlayout.cpp; else rm -f launcherlayout.cpp ; exit $$ret ; fi

launcherlayout.h: $(srcdir)/launcherlayout.ui
	$(UIC) -o launcherlayout.h $(srcdir)/launcherlayout.ui

launcherlayout.moc: launcherlayout.h
	$(MOC) launcherlayout.h -o launcherlayout.moc

videolayout.cpp: $(srcdir)/videolayout.ui videolayout.h videolayout.moc
	rm -f videolayout.cpp
	echo '#include <kdialog.h>' > videolayout.cpp
	echo '#include <klocale.h>' >> videolayout.cpp
	$(UIC) -tr ${UIC_TR} -i videolayout.h $(srcdir)/videolayout.ui > videolayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" videolayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_videolayout,g" >> videolayout.cpp ;\
	rm -f videolayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "videolayout.moc"' >> videolayout.cpp; else rm -f videolayout.cpp ; exit $$ret ; fi

videolayout.h: $(srcdir)/videolayout.ui
	$(UIC) -o videolayout.h $(srcdir)/videolayout.ui

videolayout.moc: videolayout.h
	$(MOC) videolayout.h -o videolayout.moc

neuroscopemisclayout.cpp: $(srcdir)/neuroscopemisclayout.ui neuroscopemisclayout.h neuroscopemisclayout.moc
	rm -f neuroscopemisclayout.cpp
	echo '#include <kdialog.h>' > neuroscopemisclayout.cpp
	echo '#include <klocale.h>' >> neuroscopemisclayout.cpp
	$(UIC) -tr ${UIC_TR} -i neuroscopemisclayout.h $(srcdir)/neuroscopemisclayout.ui > neuroscopemisclayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" neuroscopemisclayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_neuroscopemisclayout,g" >> neuroscopemisclayout.cpp ;\
	rm -f neuroscopemisclayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "neuroscopemisclayout.moc"' >> neuroscopemisclayout.cpp; else rm -f neuroscopemisclayout.cpp ; exit $$ret ; fi

neuroscopemisclayout.h: $(srcdir)/neuroscopemisclayout.ui
	$(UIC) -o neuroscopemisclayout.h $(srcdir)/neuroscopemisclayout.ui

neuroscopemisclayout.moc: neuroscopemisclayout.h
	$(MOC) neuroscopemisclayout.h -o neuroscopemisclayout.moc

clusterslayout.cpp: $(srcdir)/clusterslayout.ui clusterslayout.h clusterslayout.moc
	rm -f clusterslayout.cpp
	echo '#include <kdialog.h>' > clusterslayout.cpp
	echo '#include <klocale.h>' >> clusterslayout.cpp
	$(UIC) -tr ${UIC_TR} -i clusterslayout.h $(srcdir)/clusterslayout.ui > clusterslayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" clusterslayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_clusterslayout,g" >> clusterslayout.cpp ;\
	rm -f clusterslayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "clusterslayout.moc"' >> clusterslayout.cpp; else rm -f clusterslayout.cpp ; exit $$ret ; fi

clusterslayout.h: $(srcdir)/clusterslayout.ui
	$(UIC) -o clusterslayout.h $(srcdir)/clusterslayout.ui

clusterslayout.moc: clusterslayout.h
	$(MOC) clusterslayout.h -o clusterslayout.moc

anatomylayout.cpp: $(srcdir)/anatomylayout.ui anatomylayout.h anatomylayout.moc
	rm -f anatomylayout.cpp
	echo '#include <kdialog.h>' > anatomylayout.cpp
	echo '#include <klocale.h>' >> anatomylayout.cpp
	$(UIC) -tr ${UIC_TR} -i anatomylayout.h $(srcdir)/anatomylayout.ui > anatomylayout.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" anatomylayout.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_anatomylayout,g" >> anatomylayout.cpp ;\
	rm -f anatomylayout.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "anatomylayout.moc"' >> anatomylayout.cpp; else rm -f anatomylayout.cpp ; exit $$ret ; fi

anatomylayout.h: $(srcdir)/anatomylayout.ui
	$(UIC) -o anatomylayout.h $(srcdir)/anatomylayout.ui

anatomylayout.moc: anatomylayout.h
	$(MOC) anatomylayout.h -o anatomylayout.moc
